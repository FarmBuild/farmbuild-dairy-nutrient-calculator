"use strict";angular.module("farmbuild.nutrientCalculator",["farmbuild.core","farmbuild.farmdata"]).factory("NutrientCalculator",function(MilkSold,GoogleAnalytic,AnimalsPurchased,FarmData){var NutrientCalculator={};return NutrientCalculator.load=function(farmData){return FarmData.isFarmData(farmData)?(farmData.nutrientCalculator||(farmData.nutrientCalculator={milkSold:{}}),farmData):void 0},NutrientCalculator.milkSold=MilkSold,NutrientCalculator.googleAnalytic=GoogleAnalytic,NutrientCalculator.animalsPurchased=AnimalsPurchased,window.farmbuild.nutrientcalculator=NutrientCalculator,NutrientCalculator}),angular.module("farmbuild.nutrientCalculator").constant("animalTypes",{heavyAdult:{name:"Heavy adult cattle",weight:650},averageAdult:{name:"Average adult cattle",weight:500},yearling:{name:"Yearling",weight:300},weanedYoungStock:{name:"Weaned young stock",weight:120},bobbyCalves:{name:"Bobby calve",weight:40}}),angular.module("farmbuild.nutrientCalculator").factory("AnimalsPurchased",function(Validations,animalTypes){var AnimalsPurchased={},_isPositiveNumber=Validations.isPositiveNumber,_isAlphabet=Validations.isAlphabet,_types=animalTypes;return AnimalsPurchased.calculate=function(animals){var numberOfAnimals=0,weight=0,nitrogenInKg=0,phosphorusInKg=0,potassiumInKg=0,sulphurInKg=0,nitrogenPercentage=2.8,phosphorusPercentage=.72,potassiumPercentage=.2,sulphurPercentage=.8,incomings=[],i=0;if(!animals||0===animals.length)return void 0;for(i;i<animals.length;i++){var animalWeight,animalCount,animal=animals[i];if(!animal.type||!_types[animal.type])return void 0;if(animalWeight=_types[animal.type].weight,animalCount=animal.numberOfAnimals,!_isPositiveNumber(animalCount))return void 0;weight+=animalWeight*animalCount,numberOfAnimals+=animalCount,nitrogenInKg+=nitrogenPercentage*animalWeight*animalCount/100,phosphorusInKg+=phosphorusPercentage*animalWeight*animalCount/100,potassiumInKg+=potassiumPercentage*animalWeight*animalCount/100,sulphurInKg+=sulphurPercentage*animalWeight*animalCount/100,incomings.push({name:_types[animal.type].name,numberOfAnimals:animalCount,weight:_types[animal.type].weight})}return{animals:incomings,numberOfAnimals:numberOfAnimals,weight:weight,nitrogenInKg:nitrogenInKg,phosphorusInKg:phosphorusInKg,potassiumInKg:potassiumInKg,sulphurInKg:sulphurInKg}},AnimalsPurchased.addType=function(name,weight){return _isPositiveNumber(weight)&&name&&_isAlphabet(name)?(weight=parseFloat(weight),_types[name]={name:name,weight:weight},AnimalsPurchased):void 0},AnimalsPurchased.types=function(){return _types},AnimalsPurchased}),angular.module("farmbuild.nutrientCalculator").factory("GoogleAnalytic",function(){var exports={};return exports.username="anonymous",exports}),angular.module("farmbuild.nutrientCalculator").factory("MilkSold",function(Validations){function _validateInputs(milkSoldPerYearInLitre,milkProtein,milkFat,unit){return milkSoldPerYearInLitre&&milkProtein&&milkFat&&unit&&_isPositiveNumber(milkSoldPerYearInLitre)&&_isPositiveNumber(milkProtein)&&_isPositiveNumber(milkFat)?"%"===unit&&milkProtein+milkFat>100?!1:"kg"===unit&&milkProtein+milkFat>milkSoldPerYearInLitre?!1:!0:!1}function _calculate(milkSoldPerYearInLitre,milkFatInKg,milkProteinInKg,milkProteinPercentage,milkFatPercentage){var nitrogenPercentage=milkProteinPercentage/6.33,phosphorusPercentage=.0111*milkFatPercentage+.05255,potassiumPercentage=.14,sulphurPercentage=.06,nitrogenInKg=milkSoldPerYearInLitre*nitrogenPercentage/100,potassiumInKg=milkSoldPerYearInLitre*potassiumPercentage/100,sulphurInKg=milkSoldPerYearInLitre*sulphurPercentage/100,phosphorusInKg=milkSoldPerYearInLitre*phosphorusPercentage/100;return{totalPerYearInLitre:milkSoldPerYearInLitre,fatInKg:milkFatInKg,fatPercentage:milkFatPercentage,proteinInKg:milkProteinInKg,proteinPercentage:milkProteinPercentage,nitrogenInKg:nitrogenInKg,nitrogenPercentage:nitrogenPercentage,phosphorusInKg:phosphorusInKg,phosphorusPercentage:phosphorusPercentage,potassiumInKg:potassiumInKg,potassiumPercentage:potassiumPercentage,sulphurInKg:sulphurInKg,sulphurPercentage:sulphurPercentage}}function _kgToPercentage(valueInKg,totalInLitre){return valueInKg/totalInLitre*100}function _percentageToKg(valuePercentage,totalInLitre){return valuePercentage*totalInLitre/100}var MilkSold={},_isPositiveNumber=Validations.isPositiveNumber;return MilkSold.calculateByPercent=function(milkSoldPerYearInLitre,milkProteinPercentage,milkFatPercentage){var milkProteinInKg,milkFatInKg;return _validateInputs(milkSoldPerYearInLitre,milkProteinPercentage,milkFatPercentage,"%")?(milkSoldPerYearInLitre=parseFloat(milkSoldPerYearInLitre),milkProteinPercentage=parseFloat(milkProteinPercentage),milkFatPercentage=parseFloat(milkFatPercentage),milkProteinInKg=_percentageToKg(milkProteinPercentage,milkSoldPerYearInLitre),milkFatInKg=_percentageToKg(milkFatPercentage,milkSoldPerYearInLitre),_calculate(milkSoldPerYearInLitre,milkFatInKg,milkProteinInKg,milkProteinPercentage,milkFatPercentage)):void 0},MilkSold.calculateByKg=function(milkSoldPerYearInLitre,milkProteinInKg,milkFatInKg){var milkProteinPercentage,milkFatPercentage;return _validateInputs(milkSoldPerYearInLitre,milkProteinInKg,milkFatInKg,"kg")?(milkSoldPerYearInLitre=parseFloat(milkSoldPerYearInLitre),milkProteinInKg=parseFloat(milkProteinInKg),milkFatInKg=parseFloat(milkFatInKg),milkFatPercentage=_kgToPercentage(milkFatInKg,milkSoldPerYearInLitre),milkProteinPercentage=_kgToPercentage(milkProteinInKg,milkSoldPerYearInLitre),_calculate(milkSoldPerYearInLitre,milkFatInKg,milkProteinInKg,milkProteinPercentage,milkFatPercentage)):void 0},MilkSold}),angular.module("farmbuild.nutrientCalculator").factory("Validations",function($log){var Validations={};return Validations.isPositiveNumber=function(value){return!isNaN(value)&&angular.isNumber(value)&&isFinite(value)&&parseFloat(value)>0},Validations.isAlphabet=function(value){var regex=/^[A-Za-z]+$/gi;return regex.test(value)},Validations}),angular.module("farmbuild.nutrientCalculator").run(function(NutrientCalculator){}),"undefined"==typeof window.farmbuild?window.farmbuild={nutrientcalculator:{}}:window.farmbuild.nutrientcalculator={},angular.injector(["ng","farmbuild.nutrientCalculator"]);
//# sourceMappingURL=farmbuild-nutrientcalculator.min.js.map