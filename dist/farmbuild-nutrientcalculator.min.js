"use strict";angular.module("farmbuild.nutrientCalculator",["farmbuild.core","farmbuild.farmdata"]).factory("nutrientCalculator",function(milkSold,cowsPurchased,cowsCulled,foragesPurchased,FarmData,$log){var nutrientCalculator={};return $log.info("Welcome to Farm Dairy Nutrient Calculator ..."),nutrientCalculator.load=function(farmData){return FarmData.isFarmData(farmData)?(farmData.nutrientCalculator||(farmData.nutrientCalculator={milkSold:{},cowsCulled:{},cowsPurchased:{}}),farmData):void 0},nutrientCalculator.milkSold=milkSold,nutrientCalculator.cowsPurchased=cowsPurchased,nutrientCalculator.cowsCulled=cowsCulled,nutrientCalculator.foragesPurchased=foragesPurchased,nutrientCalculator.version="0.1.0","undefined"==typeof window.farmbuild?window.farmbuild={nutrientcalculator:nutrientCalculator}:window.farmbuild.nutrientcalculator=nutrientCalculator,nutrientCalculator}),angular.module("farmbuild.nutrientCalculator").factory("cowsCulled",function(validations,references){var cowsCulled={},_isPositiveNumber=validations.isPositiveNumber,_isAlphanumeric=validations.isAlphanumeric,_types=angular.copy(references.cowTypes);return cowsCulled.calculate=function(cows){var numberOfCows=0,weight=0,nitrogenInKg=0,phosphorusInKg=0,potassiumInKg=0,sulphurInKg=0,nitrogenPercentage=2.8,phosphorusPercentage=.72,potassiumPercentage=.2,sulphurPercentage=.8,incomings=[],i=0;if(!cows||0===cows.length)return void 0;for(i;i<cows.length;i++){var cowWeight,cowCount,cow=cows[i];if(!cow.name||!cow.weight)return void 0;if(cowWeight=cow.weight,cowCount=cow.numberOfCows,!_isPositiveNumber(cowCount))return void 0;weight+=cowWeight*cowCount,numberOfCows+=cowCount,nitrogenInKg+=nitrogenPercentage*cowWeight*cowCount/100,phosphorusInKg+=phosphorusPercentage*cowWeight*cowCount/100,potassiumInKg+=potassiumPercentage*cowWeight*cowCount/100,sulphurInKg+=sulphurPercentage*cowWeight*cowCount/100,incomings.push({name:cow.name,numberOfCows:cowCount,weight:cow.weight})}return{cows:incomings,numberOfCows:numberOfCows,weight:weight,nitrogenInKg:nitrogenInKg,phosphorusInKg:phosphorusInKg,potassiumInKg:potassiumInKg,sulphurInKg:sulphurInKg}},cowsCulled.addType=function(name,weight){return _isPositiveNumber(weight)&&name&&_isAlphanumeric(name)?(weight=parseFloat(weight),_types.push({name:name,weight:weight}),cowsCulled):void 0},cowsCulled.removeTypeByName=function(name){return name?(angular.forEach(_types,function(type,i){type.name===name&&_types.splice(i,1)}),_types):void 0},cowsCulled.removeTypeByIndex=function(index){return!index||0>index||index>_types.length-1?void 0:(_types.splice(index,1),_types)},cowsCulled.types=function(){return _types},cowsCulled}),angular.module("farmbuild.nutrientCalculator").factory("cowsPurchased",function(validations,references){var cowsPurchased={},_isPositiveNumber=validations.isPositiveNumber,_isAlphanumeric=validations.isAlphanumeric,_types=angular.copy(references.cowTypes);return cowsPurchased.calculate=function(cows){var numberOfCows=0,weight=0,nitrogenInKg=0,phosphorusInKg=0,potassiumInKg=0,sulphurInKg=0,nitrogenPercentage=2.8,phosphorusPercentage=.72,potassiumPercentage=.2,sulphurPercentage=.8,incomings=[],i=0;if(!cows||0===cows.length)return void 0;for(i;i<cows.length;i++){var cowWeight,cowCount,cow=cows[i];if(!cow.name||!cow.weight)return void 0;if(cowWeight=cow.weight,cowCount=cow.numberOfCows,!_isPositiveNumber(cowCount))return void 0;weight+=cowWeight*cowCount,numberOfCows+=cowCount,nitrogenInKg+=nitrogenPercentage*cowWeight*cowCount/100,phosphorusInKg+=phosphorusPercentage*cowWeight*cowCount/100,potassiumInKg+=potassiumPercentage*cowWeight*cowCount/100,sulphurInKg+=sulphurPercentage*cowWeight*cowCount/100,incomings.push({name:cow.name,numberOfCows:cowCount,weight:cow.weight})}return{cows:incomings,numberOfCows:numberOfCows,weight:weight,nitrogenInKg:nitrogenInKg,phosphorusInKg:phosphorusInKg,potassiumInKg:potassiumInKg,sulphurInKg:sulphurInKg}},cowsPurchased.addType=function(name,weight){return _isPositiveNumber(weight)&&name&&_isAlphanumeric(name)?(weight=parseFloat(weight),_types.push({name:name,weight:weight}),cowsPurchased):void 0},cowsPurchased.removeTypeByName=function(name){return name?(angular.forEach(_types,function(type,i){type.name===name&&_types.splice(i,1)}),_types):void 0},cowsPurchased.removeTypeByIndex=function(index){return!index||0>index||index>_types.length-1?void 0:(_types.splice(index,1),_types)},cowsPurchased.types=function(){return _types},cowsPurchased}),angular.module("farmbuild.nutrientCalculator").factory("foragesPurchased",function(validations,references,$log){function _validate(forage){return $log.info("validating forage ...",forage),_isDefined(forage.type)&&_isDefined(forage.weight)&&_isDefined(forage.isDry)?_validateType(forage.type):!1}function _create(type,weight,isDry){return{type:type,weight:weight,isDry:isDry}}function _add(type,weight,isDry){var forage=_create(type,weight,isDry);return _forages.push(forage),forages}function _calculate(forages){$log.info("calculating forages nutrient ...",forages);var totalWeight=0,totalDMWeight=0,nitrogenInKg=0,phosphorusInKg=0,potassiumInKg=0,sulphurInKg=0,meInKg=0,incomings=[],i=0;if(!forages||0===forages.length)return void 0;for(i;i<forages.length;i++){var weight=0,dmWeight=0,forage=forages[i],type=forage.type;if(!_validate(forage))return void 0;weight=forage.weight,dmWeight=weight,forage.isDry||(dmWeight=weight*forage.type.dryMatterPercentage/100),totalWeight+=weight,totalDMWeight+=dmWeight,nitrogenInKg+=type.nitrogenPercentage*dmWeight/100,phosphorusInKg+=type.phosphorusPercentage*dmWeight/100,potassiumInKg+=type.potassiumPercentage*dmWeight/100,sulphurInKg+=type.sulphurPercentage*dmWeight/100,meInKg+=type.metabolisableEnergyPercentage*dmWeight/100,incomings.push({type:forage.type,weight:forage.weight,isDry:forage.isDry})}return{forages:incomings,weight:totalWeight,dryMatterWeight:totalDMWeight,nitrogenInKg:nitrogenInKg,nitrogenPercentage:nitrogenInKg/totalDMWeight*100,phosphorusInKg:phosphorusInKg,phosphorusPercentage:phosphorusInKg/totalDMWeight*100,potassiumInKg:potassiumInKg,potassiumPercentage:potassiumInKg/totalDMWeight*100,sulphurInKg:sulphurInKg,sulphurPercentage:sulphurInKg/totalDMWeight*100,metabolisableEnergyInKg:meInKg,metabolisableEnergyPercentage:meInKg/totalDMWeight*100}}function _isEmpty(){return 0===_forages.length}function _count(){return _forages.length}function _toArray(){return _forages}function _at(index){return _forages[index]}function _removeIndex(index){return $log.info("removing forage type at index "+index),!index||0>index||index>_forages.length-1?void 0:(_forages.splice(index,1),_forages)}function _remove(forage){return $log.info("removing forage type ",forage),_isDefined(forage)?(angular.forEach(_forages,function(item,index){angular.equals(item,forage)&&_removeTypeByIndex(index)}),_forages):void 0}function _first(){return _forages[0]}function _last(){$log.info("getting last forage ...");var length=_count();return _forages[length-1]}function _validateType(forageType){return $log.info("validating forageType  ...",forageType),!!(_isAlphanumeric(forageType.name)&&_isPositiveNumber(forageType.metabolisableEnergyPercentage)&&_isPositiveNumber(forageType.dryMatterPercentage)&&_isPositiveNumber(forageType.potassiumPercentage)&&_isPositiveNumber(forageType.phosphorusPercentage)&&_isPositiveNumber(forageType.nitrogenPercentage)&&_isPositiveNumber(forageType.sulphurPercentage))}function _createType(name,metabolisableEnergyPercentage,dryMatterPercentage,sulphurPercentage,potassiumPercentage,phosphorusPercentage,nitrogenPercentage){return{name:name,metabolisableEnergyPercentage:metabolisableEnergyPercentage,dryMatterPercentage:dryMatterPercentage,sulphurPercentage:sulphurPercentage,potassiumPercentage:potassiumPercentage,phosphorusPercentage:phosphorusPercentage,nitrogenPercentage:nitrogenPercentage}}function _addType(name,mePercentage,dryMatterPercentage,sulphurPercentage,potassiumPercentage,phosphorusPercentage,nitrogenPercentage,index){var forageType=_createType(name,mePercentage,dryMatterPercentage,sulphurPercentage,potassiumPercentage,phosphorusPercentage,nitrogenPercentage);return $log.info("adding forage type ...",forageType),_validateType(forageType)?(_isDefined(index)?_types.splice(index,0,forageType):_types.push(forageType),forages.types):void 0}function _getTypeByIndex(index){var forageType;return $log.info("getting forage type at index: ",index),!_isDefined(index)||0>index?void 0:forageType=_types[index]}function _getLastType(){$log.info("getting last forage type ...");var length=_countTypes();return _types[length-1]}function _getFirstType(){return $log.info("getting first forage type ..."),_types[0]}function _countTypes(){return $log.info("counting forage types ...",_types),_types.length}function _typesToArray(){return $log.info("toArray types ...",_types),_types}function _removeTypeByIndex(index){return $log.info("removing forage type at index "+index),!index||0>index||index>_types.length-1?void 0:(_types.splice(index,1),_types)}function _removeType(forageType){return $log.info("removing forage type ",forageType),_isDefined(forageType)?(angular.forEach(_types,function(item,index){angular.equals(item,forageType)&&_removeTypeByIndex(index)}),_types):void 0}function _isTypesEmpty(){return $log.info("Is forage types empty?",0===forages.types.size()),0===forages.types.size()}var forages={},_isPositiveNumber=validations.isPositiveNumber,_isAlphanumeric=validations.isAlphanumeric,_isDefined=validations.isDefined,_types=angular.copy(references.forageTypes),_forages=[];return forages={add:_add,at:_at,size:_count,toArray:_toArray,removeIndex:_removeIndex,remove:_remove,first:_first,last:_last,isEmpty:_isEmpty,calculate:_calculate},forages.types={add:_addType,at:_getTypeByIndex,size:_countTypes,toArray:_typesToArray,removeIndex:_removeTypeByIndex,remove:_removeType,first:_getFirstType,last:_getLastType,isEmpty:_isTypesEmpty},forages}),angular.module("farmbuild.nutrientCalculator").factory("milkSold",function(validations){function _validateInputs(milkSoldPerYearInLitre,milkProtein,milkFat,unit){return milkSoldPerYearInLitre&&milkProtein&&milkFat&&unit&&_isPositiveNumber(milkSoldPerYearInLitre)&&_isPositiveNumber(milkProtein)&&_isPositiveNumber(milkFat)?"%"===unit&&milkProtein+milkFat>100?!1:"kg"===unit&&milkProtein+milkFat>milkSoldPerYearInLitre?!1:!0:!1}function _calculate(milkSoldPerYearInLitre,milkFatInKg,milkProteinInKg,milkProteinPercentage,milkFatPercentage){var nitrogenPercentage=milkProteinPercentage/6.33,phosphorusPercentage=.0111*milkFatPercentage+.05255,potassiumPercentage=.14,sulphurPercentage=.06,nitrogenInKg=milkSoldPerYearInLitre*nitrogenPercentage/100,potassiumInKg=milkSoldPerYearInLitre*potassiumPercentage/100,sulphurInKg=milkSoldPerYearInLitre*sulphurPercentage/100,phosphorusInKg=milkSoldPerYearInLitre*phosphorusPercentage/100;return{totalPerYearInLitre:milkSoldPerYearInLitre,fatInKg:milkFatInKg,fatPercentage:milkFatPercentage,proteinInKg:milkProteinInKg,proteinPercentage:milkProteinPercentage,nitrogenInKg:nitrogenInKg,nitrogenPercentage:nitrogenPercentage,phosphorusInKg:phosphorusInKg,phosphorusPercentage:phosphorusPercentage,potassiumInKg:potassiumInKg,potassiumPercentage:potassiumPercentage,sulphurInKg:sulphurInKg,sulphurPercentage:sulphurPercentage}}function _kgToPercentage(valueInKg,totalInLitre){return valueInKg/totalInLitre*100}function _percentageToKg(valuePercentage,totalInLitre){return valuePercentage*totalInLitre/100}var milkSold={},_isPositiveNumber=validations.isPositiveNumber;return milkSold.calculateByPercent=function(milkSoldPerYearInLitre,milkProteinPercentage,milkFatPercentage){var milkProteinInKg,milkFatInKg;return _validateInputs(milkSoldPerYearInLitre,milkProteinPercentage,milkFatPercentage,"%")?(milkSoldPerYearInLitre=parseFloat(milkSoldPerYearInLitre),milkProteinPercentage=parseFloat(milkProteinPercentage),milkFatPercentage=parseFloat(milkFatPercentage),milkProteinInKg=_percentageToKg(milkProteinPercentage,milkSoldPerYearInLitre),milkFatInKg=_percentageToKg(milkFatPercentage,milkSoldPerYearInLitre),_calculate(milkSoldPerYearInLitre,milkFatInKg,milkProteinInKg,milkProteinPercentage,milkFatPercentage)):void 0},milkSold.calculateByKg=function(milkSoldPerYearInLitre,milkProteinInKg,milkFatInKg){var milkProteinPercentage,milkFatPercentage;return _validateInputs(milkSoldPerYearInLitre,milkProteinInKg,milkFatInKg,"kg")?(milkSoldPerYearInLitre=parseFloat(milkSoldPerYearInLitre),milkProteinInKg=parseFloat(milkProteinInKg),milkFatInKg=parseFloat(milkFatInKg),milkFatPercentage=_kgToPercentage(milkFatInKg,milkSoldPerYearInLitre),milkProteinPercentage=_kgToPercentage(milkProteinInKg,milkSoldPerYearInLitre),_calculate(milkSoldPerYearInLitre,milkFatInKg,milkProteinInKg,milkProteinPercentage,milkFatPercentage)):void 0},milkSold}),angular.module("farmbuild.nutrientCalculator").factory("validations",function($log){var validations={};return validations.isPositiveNumber=function(value){return!isNaN(parseFloat(value))&&isFinite(value)&&parseFloat(value)>0},validations.isAlphabet=function(value){var regex=/^[A-Za-z]+$/gi;return regex.test(value)},validations.isAlphanumeric=function(value){var regex=/^[a-zA-Z0-9]*[a-zA-Z]+[a-zA-Z0-9 _]*$/gi;return regex.test(value)},validations.isDefined=angular.isDefined,validations}),angular.module("farmbuild.nutrientCalculator").constant("references",{cowTypes:[{name:"Heavy adult cattle",weight:650},{name:"Average adult cattle",weight:500},{name:"Yearling",weight:300},{name:"Weaned young stock",weight:120},{name:"Bobby calve",weight:40}],forageTypes:[{name:"Average crop",metabolisableEnergyPercentage:9.75,dryMatterPercentage:44.45,sulphurPercentage:.5,potassiumPercentage:2.68,phosphorusPercentage:.34,nitrogenPercentage:2.99},{name:"Average hay",metabolisableEnergyPercentage:9.39,dryMatterPercentage:85,sulphurPercentage:.23,potassiumPercentage:2.29,phosphorusPercentage:.38,nitrogenPercentage:2.44},{name:"Average silage",metabolisableEnergyPercentage:8.76,dryMatterPercentage:49.01,sulphurPercentage:.27,potassiumPercentage:2.35,phosphorusPercentage:.34,nitrogenPercentage:2.12},{name:"Average straw",metabolisableEnergyPercentage:9.18,dryMatterPercentage:45.1,sulphurPercentage:.28,potassiumPercentage:2.7,phosphorusPercentage:.4,nitrogenPercentage:2.6},{name:"Brassica crop",metabolisableEnergyPercentage:11.32,dryMatterPercentage:25.99,sulphurPercentage:.64,potassiumPercentage:2.85,phosphorusPercentage:.33,nitrogenPercentage:3.72},{name:"Cereal hay",metabolisableEnergyPercentage:8.32,dryMatterPercentage:84.74,sulphurPercentage:.17,potassiumPercentage:1.83,phosphorusPercentage:.22,nitrogenPercentage:1.54},{name:"Canola silage",metabolisableEnergyPercentage:9.45,dryMatterPercentage:23.77,sulphurPercentage:.51,potassiumPercentage:2.88,phosphorusPercentage:.3,nitrogenPercentage:2.75},{name:"Cereal hay",metabolisableEnergyPercentage:8.32,dryMatterPercentage:84.74,sulphurPercentage:.17,potassiumPercentage:1.83,phosphorusPercentage:.22,nitrogenPercentage:1.54},{name:"Cereal silage",metabolisableEnergyPercentage:9.14,dryMatterPercentage:36.28,sulphurPercentage:.17,potassiumPercentage:2.02,phosphorusPercentage:.35,nitrogenPercentage:2.02},"Cereal straw","Clover hay","Forage blend","Kikuyu pasture","Kikuyu silage","Lucerne hay","Lucerne pasture","Lucerne silage","Maize silage","Millett crop","Oat Hay","Oats & peas silage","Paspalum silage","Pasture hay","Pasture silage","Prairie grass silage","Ryegrass pasture","Seteria silage","Sorghum crop","Sorghum hay","Sorghum/millet hay","Sorghum/millet silage","Turnip crop"]}),angular.module("farmbuild.nutrientCalculator").run(function(nutrientCalculator){}),angular.injector(["ng","farmbuild.nutrientCalculator"]);
//# sourceMappingURL=farmbuild-nutrientcalculator.min.js.map