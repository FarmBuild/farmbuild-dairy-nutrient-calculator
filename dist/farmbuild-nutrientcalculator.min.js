"use strict";function Calculate_Forage_Nutrient_(section){var avgNPC,avgPPC,avgKPC,avgSPC,totalNKg,totalPKg,totalKKg,totalSKg,totalMEKg,i=0,forage_purchased_total=0,forage_amount_total=0;avgNPC=avgPPC=avgKPC=avgSPC=totalNKg=totalPKg=totalKKg=totalSKg=totalMEKg=0;var forageNKg,foragePKg,forageKKg,forageSKg,forageMEKg,forageNPC,foragePPC,forageKPC,forageSPC,forageME,forage_amount,forage_purchased,forageDMPC,count=0;"forage"==section.substr(0,"forage".length)?feedtype="forage":"conc"==section.substr(0,"conc".length)?feedtype="conc":"fert"==section.substr(0,"fert".length)?feedtype="fert":alert("Wrong type");try{for(i=1;9>=i;i++)if(forage_purchased=document.getElementById(feedtype+"_purchased"+i).value,forage_amount=document.getElementById(feedtype+"_amount"+i).value,i>4&&(forage_amount+="1000"),forageNPC=document.getElementById(feedtype+"NPC"+i).value,foragePPC=document.getElementById(feedtype+"PPC"+i).value,forageKPC=document.getElementById(feedtype+"KPC"+i).value,forageSPC=document.getElementById(feedtype+"SPC"+i).value,forage_purchased.length>0&&forage_amount.length>0&&forageNPC.length>0&&foragePPC.length>0&&forageKPC.length>0&&forageSPC.length>0){if(forage_purchased_total+=parseFloat(forage_purchased),i>4){var ind=i-4;forageDMPC=parseFloat(document.getElementById(feedtype+"DMPC"+ind).value),forage_amount=forage_purchased*forageDMPC/100,document.getElementById(feedtype+"_amount"+i).value=forage_amount}forage_amount_total+=parseFloat(forage_amount),avgNPC+=parseFloat(forageNPC),avgPPC+=parseFloat(foragePPC),avgKPC+=parseFloat(forageKPC),avgSPC+=parseFloat(forageSPC),totalNKg+=forageNKg=forage_amount*forageNPC*10,totalPKg+=foragePKg=forage_amount*foragePPC*10,totalKKg+=forageKKg=forage_amount*forageKPC*10,totalSKg+=forageSKg=forage_amount*forageSPC*10,"fert"!=feedtype&&(forageME=parseFloat(document.getElementById(feedtype+"ME"+i).value),totalMEKg+=forageMEKg=forage_amount*forageME*1e3),document.getElementById(feedtype+"NKg"+i).value=forageNKg.toFixed(0),document.getElementById(feedtype+"PKg"+i).value=foragePKg.toFixed(0),document.getElementById(feedtype+"KKg"+i).value=forageKKg.toFixed(0),document.getElementById(feedtype+"SKg"+i).value=forageSKg.toFixed(0),"fert"!=feedtype&&(document.getElementById(feedtype+"MEKg"+i).value=forageMEKg.toFixed(0)),count++}avgNPC/=count,avgKPC/=count,avgPPC/=count,avgSPC/=count,document.getElementById(feedtype+"_purchased_total").value=forage_purchased_total.toFixed(2),document.getElementById(feedtype+"_amount_total").value=forage_amount_total.toFixed(2),document.getElementById(feedtype+"NPCavg").value=avgNPC.toFixed(2),document.getElementById(feedtype+"KPCavg").value=avgKPC.toFixed(2),document.getElementById(feedtype+"PPCavg").value=avgPPC.toFixed(2),document.getElementById(feedtype+"SPCavg").value=avgSPC.toFixed(2),document.getElementById(feedtype+"NKg_total").value=totalNKg.toFixed(0),document.getElementById(feedtype+"KKg_total").value=totalKKg.toFixed(0),document.getElementById(feedtype+"PKg_total").value=totalPKg.toFixed(0),document.getElementById(feedtype+"SKg_total").value=totalSKg.toFixed(0),"fert"!=feedtype&&(document.getElementById(feedtype+"MEKg_total").value=totalMEKg.toFixed(0))}catch(err){alert(err.message)}}angular.module("farmbuild.nutrientCalculator",["farmbuild.core","farmbuild.farmdata"]).factory("nutrientCalculator",function(milkSold,cowsPurchased,cowsCulled,FarmData){var nutrientCalculator={};return nutrientCalculator.load=function(farmData){return FarmData.isFarmData(farmData)?(farmData.nutrientCalculator||(farmData.nutrientCalculator={milkSold:{},cowsCulled:{},cowsPurchased:{}}),farmData):void 0},nutrientCalculator.milkSold=milkSold,nutrientCalculator.cowsPurchased=cowsPurchased,nutrientCalculator.cowsCulled=cowsCulled,window.farmbuild.nutrientcalculator=nutrientCalculator,nutrientCalculator}),angular.module("farmbuild.nutrientCalculator").factory("cowsCulled",function(validations,references){var cowsCulled={},_isPositiveNumber=validations.isPositiveNumber,_isAlphanumeric=validations.isAlphanumeric,_types=angular.copy(references.cowTypes);return cowsCulled.calculate=function(cows){var numberOfCows=0,weight=0,nitrogenInKg=0,phosphorusInKg=0,potassiumInKg=0,sulphurInKg=0,nitrogenPercentage=2.8,phosphorusPercentage=.72,potassiumPercentage=.2,sulphurPercentage=.8,incomings=[],i=0;if(!cows||0===cows.length)return void 0;for(i;i<cows.length;i++){var cowWeight,cowCount,cow=cows[i];if(!cow.name||!cow.weight)return void 0;if(cowWeight=cow.weight,cowCount=cow.numberOfCows,!_isPositiveNumber(cowCount))return void 0;weight+=cowWeight*cowCount,numberOfCows+=cowCount,nitrogenInKg+=nitrogenPercentage*cowWeight*cowCount/100,phosphorusInKg+=phosphorusPercentage*cowWeight*cowCount/100,potassiumInKg+=potassiumPercentage*cowWeight*cowCount/100,sulphurInKg+=sulphurPercentage*cowWeight*cowCount/100,incomings.push({name:cow.name,numberOfCows:cowCount,weight:cow.weight})}return{cows:incomings,numberOfCows:numberOfCows,weight:weight,nitrogenInKg:nitrogenInKg,phosphorusInKg:phosphorusInKg,potassiumInKg:potassiumInKg,sulphurInKg:sulphurInKg}},cowsCulled.addType=function(name,weight){return _isPositiveNumber(weight)&&name&&_isAlphanumeric(name)?(weight=parseFloat(weight),_types.push({name:name,weight:weight}),cowsCulled):void 0},cowsCulled.removeTypeByName=function(name){return name?(angular.forEach(_types,function(type,i){type.name===name&&_types.splice(i,1)}),_types):void 0},cowsCulled.removeTypeByIndex=function(index){return!index||0>index||index>_types.length-1?void 0:(_types.splice(index,1),_types)},cowsCulled.types=function(){return _types},cowsCulled}),angular.module("farmbuild.nutrientCalculator").factory("cowsPurchased",function(validations,references){var cowsPurchased={},_isPositiveNumber=validations.isPositiveNumber,_isAlphanumeric=validations.isAlphanumeric,_types=angular.copy(references.cowTypes);return cowsPurchased.calculate=function(cows){var numberOfCows=0,weight=0,nitrogenInKg=0,phosphorusInKg=0,potassiumInKg=0,sulphurInKg=0,nitrogenPercentage=2.8,phosphorusPercentage=.72,potassiumPercentage=.2,sulphurPercentage=.8,incomings=[],i=0;if(!cows||0===cows.length)return void 0;for(i;i<cows.length;i++){var cowWeight,cowCount,cow=cows[i];if(!cow.name||!cow.weight)return void 0;if(cowWeight=cow.weight,cowCount=cow.numberOfCows,!_isPositiveNumber(cowCount))return void 0;weight+=cowWeight*cowCount,numberOfCows+=cowCount,nitrogenInKg+=nitrogenPercentage*cowWeight*cowCount/100,phosphorusInKg+=phosphorusPercentage*cowWeight*cowCount/100,potassiumInKg+=potassiumPercentage*cowWeight*cowCount/100,sulphurInKg+=sulphurPercentage*cowWeight*cowCount/100,incomings.push({name:cow.name,numberOfCows:cowCount,weight:cow.weight})}return{cows:incomings,numberOfCows:numberOfCows,weight:weight,nitrogenInKg:nitrogenInKg,phosphorusInKg:phosphorusInKg,potassiumInKg:potassiumInKg,sulphurInKg:sulphurInKg}},cowsPurchased.addType=function(name,weight){return _isPositiveNumber(weight)&&name&&_isAlphanumeric(name)?(weight=parseFloat(weight),_types.push({name:name,weight:weight}),cowsPurchased):void 0},cowsPurchased.removeTypeByName=function(name){return name?(angular.forEach(_types,function(type,i){type.name===name&&_types.splice(i,1)}),_types):void 0},cowsPurchased.removeTypeByIndex=function(index){return!index||0>index||index>_types.length-1?void 0:(_types.splice(index,1),_types)},cowsPurchased.types=function(){return _types},cowsPurchased}),angular.module("farmbuild.nutrientCalculator").factory("milkSold",function(validations){function _validateInputs(milkSoldPerYearInLitre,milkProtein,milkFat,unit){return milkSoldPerYearInLitre&&milkProtein&&milkFat&&unit&&_isPositiveNumber(milkSoldPerYearInLitre)&&_isPositiveNumber(milkProtein)&&_isPositiveNumber(milkFat)?"%"===unit&&milkProtein+milkFat>100?!1:"kg"===unit&&milkProtein+milkFat>milkSoldPerYearInLitre?!1:!0:!1}function _calculate(milkSoldPerYearInLitre,milkFatInKg,milkProteinInKg,milkProteinPercentage,milkFatPercentage){var nitrogenPercentage=milkProteinPercentage/6.33,phosphorusPercentage=.0111*milkFatPercentage+.05255,potassiumPercentage=.14,sulphurPercentage=.06,nitrogenInKg=milkSoldPerYearInLitre*nitrogenPercentage/100,potassiumInKg=milkSoldPerYearInLitre*potassiumPercentage/100,sulphurInKg=milkSoldPerYearInLitre*sulphurPercentage/100,phosphorusInKg=milkSoldPerYearInLitre*phosphorusPercentage/100;return{totalPerYearInLitre:milkSoldPerYearInLitre,fatInKg:milkFatInKg,fatPercentage:milkFatPercentage,proteinInKg:milkProteinInKg,proteinPercentage:milkProteinPercentage,nitrogenInKg:nitrogenInKg,nitrogenPercentage:nitrogenPercentage,phosphorusInKg:phosphorusInKg,phosphorusPercentage:phosphorusPercentage,potassiumInKg:potassiumInKg,potassiumPercentage:potassiumPercentage,sulphurInKg:sulphurInKg,sulphurPercentage:sulphurPercentage}}function _kgToPercentage(valueInKg,totalInLitre){return valueInKg/totalInLitre*100}function _percentageToKg(valuePercentage,totalInLitre){return valuePercentage*totalInLitre/100}var milkSold={},_isPositiveNumber=validations.isPositiveNumber;return milkSold.calculateByPercent=function(milkSoldPerYearInLitre,milkProteinPercentage,milkFatPercentage){var milkProteinInKg,milkFatInKg;return _validateInputs(milkSoldPerYearInLitre,milkProteinPercentage,milkFatPercentage,"%")?(milkSoldPerYearInLitre=parseFloat(milkSoldPerYearInLitre),milkProteinPercentage=parseFloat(milkProteinPercentage),milkFatPercentage=parseFloat(milkFatPercentage),milkProteinInKg=_percentageToKg(milkProteinPercentage,milkSoldPerYearInLitre),milkFatInKg=_percentageToKg(milkFatPercentage,milkSoldPerYearInLitre),_calculate(milkSoldPerYearInLitre,milkFatInKg,milkProteinInKg,milkProteinPercentage,milkFatPercentage)):void 0},milkSold.calculateByKg=function(milkSoldPerYearInLitre,milkProteinInKg,milkFatInKg){var milkProteinPercentage,milkFatPercentage;return _validateInputs(milkSoldPerYearInLitre,milkProteinInKg,milkFatInKg,"kg")?(milkSoldPerYearInLitre=parseFloat(milkSoldPerYearInLitre),milkProteinInKg=parseFloat(milkProteinInKg),milkFatInKg=parseFloat(milkFatInKg),milkFatPercentage=_kgToPercentage(milkFatInKg,milkSoldPerYearInLitre),milkProteinPercentage=_kgToPercentage(milkProteinInKg,milkSoldPerYearInLitre),_calculate(milkSoldPerYearInLitre,milkFatInKg,milkProteinInKg,milkProteinPercentage,milkFatPercentage)):void 0},milkSold}),angular.module("farmbuild.nutrientCalculator").factory("validations",function($log){var validations={};return validations.isPositiveNumber=function(value){return!isNaN(parseFloat(value))&&isFinite(value)&&parseFloat(value)>0},validations.isAlphabet=function(value){var regex=/^[A-Za-z]+$/gi;return regex.test(value)},validations.isAlphanumeric=function(value){var regex=/^[a-zA-Z0-9]*[a-zA-Z]+[a-zA-Z0-9 _]*$/gi;return regex.test(value)},validations}),angular.module("farmbuild.nutrientCalculator").constant("references",{cowTypes:[{name:"Heavy adult cattle",weight:650},{name:"Average adult cattle",weight:500},{name:"Yearling",weight:300},{name:"Weaned young stock",weight:120},{name:"Bobby calve",weight:40}]}),angular.module("farmbuild.nutrientCalculator").run(function(nutrientCalculator){}),"undefined"==typeof window.farmbuild?window.farmbuild={nutrientcalculator:{}}:window.farmbuild.nutrientcalculator={},angular.injector(["ng","farmbuild.nutrientCalculator"]);
//# sourceMappingURL=farmbuild-nutrientcalculator.min.js.map